// Generated by IcedCoffeeScript 1.8.0-c
(function() {
  var auth;

  auth = require('./auth/auth');

  module.exports = {
    make_audit_trail: function(team, req, key, value) {
      return {
        u: req.userCtx.name,
        dt: +new Date(),
        a: action,
        k: key,
        v: value
      };
    },
    mk_objs: function(obj, path_array, val) {
      var key, last_key, _i, _len;
      if (val == null) {
        val = {};
      }

      /*
      make a set of nested object.
      
      mk_objs({'x': 1}, ['a', 'b'], [])
       * returns {'x': 1, 'a': {'b': []}}
      
      return the val
       */
      last_key = path_array.pop();
      for (_i = 0, _len = path_array.length; _i < _len; _i++) {
        key = path_array[_i];
        if (obj[key] == null) {
          obj[key] = {};
        }
        obj = obj[key];
      }
      if (!obj[last_key]) {
        obj[last_key] = val;
      }
      return obj[last_key];
    },
    add_team_perms: function(original_team, user) {
      var role, role_name, rsrc, rsrc_auth, rsrc_name, team, _ref, _ref1;
      team = JSON.parse(JSON.stringify(original_team));
      _ref = team.rsrcs;
      for (rsrc_name in _ref) {
        rsrc = _ref[rsrc_name];
        rsrc_auth = auth[rsrc_name];
        rsrc.perms = {
          add: rsrc_auth.add_team_asset(user, team),
          remove: rsrc_auth.remove_team_asset(user, team)
        };
      }
      _ref1 = team.roles;
      for (role_name in _ref1) {
        role = _ref1[role_name];
        role.perms = {
          add: auth.kratos.add_team_member(user, team, role_name),
          remove: auth.kratos.remove_team_member(user, team, role_name)
        };
      }
      return team;
    }
  };

}).call(this);

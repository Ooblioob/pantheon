// Generated by IcedCoffeeScript 1.8.0-c
(function() {
  module.exports = {
    views: {
      by_resource_id: {
        map: function(doc) {
          var resource, resource_id, resource_name, _results;
          _results = [];
          for (resource_name in doc.resrcs) {
            resource = doc.resrcs[resource_name];
            resource_id = resource.data.id;
            _results.push(emit([resource_name, resource_id], doc.name));
          }
          return _results;
        }
      },
      by_resource_username: {
        map: function(doc) {
          var resource, resource_name, resource_username, _results;
          _results = [];
          for (resource_name in doc.resrcs) {
            resource = doc.resrcs[resource_name];
            resource_username = resource.data.username || resource.data.login;
            if (resource_username) {
              _results.push(emit([resource_name, resource_username], doc.name));
            } else {
              _results.push(void 0);
            }
          }
          return _results;
        }
      },
      by_username: {
        map: function(doc) {
          if (doc.username) {
            return emit(doc.username);
          }
        }
      },
      by_name: {
        map: function(doc) {
          if (doc.name) {
            return emit(doc.name);
          }
        }
      },
      contractors: {
        map: function(doc) {
          var _ref;
          return emit(((_ref = doc.data) != null ? _ref.contractor : void 0) || false, doc.username);
        }
      }
    },
    lists: {
      all_users: function(header, req) {
        var out, row;
        out = [];
        while ((row = getRow())) {
          out.push(row.doc);
        }
        return JSON.stringify(out);
      }
    },
    rewrites: [
      {
        from: "/users",
        to: "/_list/all_users/by_username",
        method: 'GET',
        query: {
          include_docs: 'true'
        }
      }, {
        from: "/users/:user_id",
        to: "../../:user_id",
        query: {}
      }
    ]
  };

}).call(this);

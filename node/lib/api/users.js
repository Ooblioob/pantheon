// Generated by IcedCoffeeScript 1.8.0-c
(function() {
  var couch_utils, isInt, user_db, users, uuid;

  couch_utils = require('../couch_utils');

  users = {};

  user_db = couch_utils.nano_admin.use('_users');

  uuid = require('node-uuid');

  isInt = function(s) {
    return String(parseInt(s)) === s;
  };

  users._get_users = function(callback) {
    return couch_utils.rewrite(user_db, 'base', '/users', callback);
  };

  users.get_users = function(req, resp) {
    var resource, rsrcs_id, _ref;
    _ref = req.query;
    for (resource in _ref) {
      rsrcs_id = _ref[resource];
      break;
    }
    if (resource) {
      if (isInt(rsrcs_id)) {
        rsrcs_id = parseInt(rsrcs_id);
      }
      return user_db.viewWithList('base', 'by_resource_id', 'get_user', {
        include_docs: true,
        key: [resource, rsrcs_id]
      }).pipe(resp);
    } else {
      return users._get_users().pipe(resp);
    }
  };

  users._get_user = function(user_id, callback) {
    return couch_utils.rewrite(user_db, 'base', '/users/org.couchdb.user:' + user_id, callback);
  };

  users.get_user = function(req, resp) {
    return users._get_user(req.params.user_id).pipe(resp);
  };

  users.add_remove_role = function(action_type) {
    return function(req, resp) {
      var action, resource, role, user;
      user = 'org.couchdb.user:' + req.params.user_id;
      resource = req.params.resource;
      role = req.params.role;
      action = {
        action: action_type,
        key: resource,
        value: role,
        uuid: uuid.v4()
      };
      return user_db.atomic('base', 'do_action', user, action).pipe(resp);
    };
  };

  module.exports = users;

}).call(this);
